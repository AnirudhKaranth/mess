/* Home.css */

.home-container {
  background-color: black;
  display: flex;
  flex-wrap: wrap;
  gap: 0em;
  justify-content: center;
  
}
.day-container{
  width: 25%;
}

.menu-card {
  background-color: rgb(247, 247, 245);
  border-radius: 8px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  margin: 7px 4px;
  overflow: hidden;
  padding: 5px;
}

.day-header {
  background-color: #707b87;
  /* background-color: #505f70; */
  color: #fff;
  padding: 10px;
  text-align: center;
  margin: 2px;
  border-radius: 5px;
  font-weight: bold
}

.meal-section {
  padding: 15px;
}

.meal-time {
  font-weight: 500;
  margin-bottom: 5px;
  font-size: 17px;
}

.menu-item {
  margin-bottom: 8px;
  font-size: large;
}

.error-message {
    color: #e74c3c;
    font-size: 1.2em;
    text-align: center;
    margin-top: 20px;
  }
//// OptionsSelector.js
import React, { useState } from 'react';
import './EditMenu.css';
import Navbar from './Navbar';

const EditMenu = () => {
  const [selectedDay, setSelectedDay] = useState('');
  const [selectedTime, setSelectedTime] = useState('');
  const [selectedFood, setSelectedFood] = useState('');

  const handleDayChange = (event) => {
    setSelectedDay(event.target.value);
  };

  const handleTimeChange = (event) => {
    setSelectedTime(event.target.value);
  };

  const handleFoodChange = (event) => {
    setSelectedFood(event.target.value);
  };

  const handleApplyChanges = async () => {
    try {
      // Construct the request body
      const requestBody = {
        selectedDay,
        selectedTime,
        selectedFood,
      };
      console.log('Request Body:', requestBody);

      // Send a PUT request to the backend route
      const response = await fetch('http://localhost:5000/editmenu', {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({selectedDay,selectedTime,selectedFood}),
      });

      if (!response.ok) {
        throw new Error('Failed to update menu');
      }

      // Handle success or update UI as needed
      console.log('Menu updated successfully');
    } catch (error) {
      console.error('Error updating menu:', error.message);
      // Handle and display the error to the user
    }
  };

  return (
    <div className="full-screen bgContainer">
    <Navbar/>
    <div className=" editContainer">
      <div className="group">
        <u>Day of the Week</u>
        <div className="labelContainer">
          {['MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', 'SATURDAY', 'SUNDAY'].map((day) => (
            <label key={day} className="label">
              <input type="radio" value={` ${day}`} checked={selectedDay === ` ${day}`} onChange={handleDayChange} />
              {`  ${day}`}
            {/* <label key={day} className="label"> //
              <input type="radio" value={day} checked={selectedDay === day} onChange={handleDayChange} />
              {day}
            </label> */}
            </label>
          ))}
        </div>
      </div>
      <div className="group">
        <u>Time of Day</u>
        <div className="labelContainer">
          {['Morning', 'Afternoon', 'Night'].map((time) => (
            <label key={time} className="label">
              <input type="radio" value={time} checked={selectedTime === time} onChange={handleTimeChange} />
              {` ${time}`}
            </label>
          ))}
        </div>
      </div>
      <div className="group">
        <u>Food Options</u>
        <div className="labelContainer">
          <select value={selectedFood} onChange={handleFoodChange}>
            {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((food) => (
              <option key={food} value={food}>
                {`Food ${food}`}
              </option>
            ))}
          </select>
        </div>
      </div>
      <button onClick={handleApplyChanges}>Apply Changes</button>
    </div>
    </div>
  );
};

export default EditMenu;
// OptionsSelector.js
import React, { useState } from 'react';
import './EditMenu.css';
import Navbar from './Navbar';

const EditMenu = () => {
  const [selectedDay, setSelectedDay] = useState('');
  const [selectedTime, setSelectedTime] = useState('');
  const [selectedFood, setSelectedFood] = useState('');

  const handleDayChange = (event) => {
    setSelectedDay(event.target.value);
  };

  const handleTimeChange = (event) => {
    setSelectedTime(event.target.value);
  };

  const handleFoodChange = (event) => {
    setSelectedFood(event.target.value);
  };

  const handleApplyChanges = async () => {
    try {
      // Construct the request body
      const requestBody = {
        selectedDay,
        selectedTime,
        selectedFood,
      };
      console.log('Request Body:', requestBody);

      // Send a PUT request to the backend route
      const response = await fetch('http://localhost:5000/editmenu', {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({selectedDay,selectedTime,selectedFood}),
      });

      if (!response.ok) {
        throw new Error('Failed to update menu');
      }

      // Handle success or update UI as needed
      console.log('Menu updated successfully');
    } catch (error) {
      console.error('Error updating menu:', error.message);
      // Handle and display the error to the user
    }
  };

  return (
    <div className="full-screen bgContainer">
    <Navbar/>
    <div className=" editContainer">
      <div className="group">
        <u>Day of the Week</u>
        <div className="labelContainer">
          {['MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', 'SATURDAY', 'SUNDAY'].map((day) => (
            <label key={day} className="label">
              <input type="radio" value={` ${day}`} checked={selectedDay === ` ${day}`} onChange={handleDayChange} />
              {`  ${day}`}
            {/* <label key={day} className="label"> //
              <input type="radio" value={day} checked={selectedDay === day} onChange={handleDayChange} />
              {day}
            </label> */}
            </label>
          ))}
        </div>
      </div>
      <div className="group">
        <u>Time of Day</u>
        <div className="labelContainer">
          {['Morning', 'Afternoon', 'Night'].map((time) => (
            <label key={time} className="label">
              <input type="radio" value={time} checked={selectedTime === time} onChange={handleTimeChange} />
              {` ${time}`}
            </label>
          ))}
        </div>
      </div>
      <div className="group">
        <u>Food Options</u>
        <div className="labelContainer">
          <select value={selectedFood} onChange={handleFoodChange}>
            {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((food) => (
              <option key={food} value={food}>
                {`Food ${food}`}
              </option>
            ))}
          </select>
        </div>
      </div>
      <button onClick={handleApplyChanges}>Apply Changes</button>
    </div>
    </div>
  );
};

export default EditMenu;
